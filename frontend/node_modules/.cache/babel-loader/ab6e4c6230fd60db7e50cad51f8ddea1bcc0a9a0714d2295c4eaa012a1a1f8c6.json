{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyduncan/repos/react-chat-app/frontend/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, List, ListItem, ListItemText, Typography, Container, Paper, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport './Chat.css';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\nconst Chat = ({\n  user\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  setTypingStatus;\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingStatus, setTypingStatus] = useState('');\n  const [readStatus, setReadStatus] = useState('');\n  const bottomRef = useRef(null);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const otherUser = user === 'Jeremy' ? 'Kasey' : 'Jeremy';\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        var _bottomRef$current;\n        const response = await axios.get(`${API_URL}/messages`);\n        setMessages(response.data);\n        const lastMessage = response.data[response.data.length - 1];\n        if (lastMessage && lastMessage.readAt && lastMessage.name !== user) {\n          setReadStatus(`${lastMessage.name} read your message at ${format(new Date(lastMessage.readAt), 'h:mm a')}`);\n        }\n        const newMessage = new Audio('/notification.wav');\n        newMessage.play().catch(error => {\n          console.log('Audio playback failed: ', error);\n        });\n        (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n          behavior: 'smooth'\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 1000);\n    return () => clearInterval(interval);\n  }, [user, otherUser]);\n  const sendMessage = async () => {\n    if (input.trim() !== \"\") {\n      try {\n        await axios.post(`${API_URL}/messages`, {\n          name: user,\n          text: input\n        });\n        setInput('');\n        setIsTyping(false);\n        await axios.post(`${API_URL}/typing`, {\n          user,\n          isTyping: false\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const handleInputChange = async e => {\n    setInput(e.target.value);\n    if (!isTyping) {\n      setIsTyping(true);\n      await axios.post(`${API_URL}/typing`, {\n        user,\n        isTyping: true\n      });\n    }\n    if (e.target.value === '') {\n      setIsTyping(false);\n      await axios.post(`${API_URL}/typing`, {\n        user,\n        isTyping: false\n      });\n    }\n  };\n  const handleBlur = async () => {\n    const lastMessage = messages[messages.length - 1];\n    if (lastMessage && lastMessage.name !== user) {\n      try {\n        await axios.put(`${API_URL}/messages/${lastMessage.id}/read`);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  useEffect(() => {\n    var _bottomRef$current2;\n    (_bottomRef$current2 = bottomRef.current) === null || _bottomRef$current2 === void 0 ? void 0 : _bottomRef$current2.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: isMobile ? false : \"sm\",\n    style: isMobile ? {\n      padding: 0\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        padding: '1rem',\n        marginTop: isMobile ? 0 : '1rem',\n        height: isMobile ? '100vh' : 'auto',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: [\"Chat as \", user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: \"chat-list\",\n        style: {\n          flexGrow: 1,\n          overflowY: 'scroll',\n          marginBottom: '1rem'\n        },\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          className: message.name === user ? \"chat-bubble user\" : \"chat-bubble other\",\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: message.text,\n            secondary: `${message.name}, ${new Date(message.timestamp).toLocaleString()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        align: \"center\",\n        gutterBottom: true,\n        children: typingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        align: \"center\",\n        gutterBottom: true,\n        children: readStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Message\",\n        value: input,\n        onChange: handleInputChange,\n        onBlur: handleBlur,\n        fullWidth: true,\n        style: {\n          marginBottom: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: sendMessage,\n        fullWidth: true,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n};\n_s(Chat, \"n21/0r/lpN6md3venCHXsFsYRf4=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","TextField","Button","List","ListItem","ListItemText","Typography","Container","Paper","useMediaQuery","useTheme","format","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Chat","user","_s","messages","setMessages","input","setInput","setTypingStatus","isTyping","setIsTyping","typingStatus","readStatus","setReadStatus","bottomRef","theme","isMobile","breakpoints","down","otherUser","fetchMessages","_bottomRef$current","response","get","data","lastMessage","length","readAt","name","Date","newMessage","Audio","play","catch","error","console","log","current","scrollIntoView","behavior","interval","setInterval","clearInterval","sendMessage","trim","post","text","handleInputChange","e","target","value","handleBlur","put","id","_bottomRef$current2","maxWidth","style","padding","children","elevation","marginTop","height","display","flexDirection","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","className","flexGrow","overflowY","marginBottom","map","message","alignItems","primary","secondary","timestamp","toLocaleString","ref","color","label","onChange","onBlur","fullWidth","onClick","_c","$RefreshReg$"],"sources":["/Users/jeremyduncan/repos/react-chat-app/frontend/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, List, ListItem, ListItemText, Typography, Container, Paper, useMediaQuery } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport './Chat.css';\nimport { format } from 'date-fns';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\nconst Chat = ({ user }) => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');setTypingStatus\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingStatus, setTypingStatus] = useState('');\n  const [readStatus, setReadStatus] = useState('');\n  const bottomRef = useRef(null);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const otherUser = user === 'Jeremy' ? 'Kasey' : 'Jeremy';\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/messages`);\n        setMessages(response.data);\n        const lastMessage = response.data[response.data.length - 1];\n                if (lastMessage && lastMessage.readAt && lastMessage.name !== user) {\n                  setReadStatus(`${lastMessage.name} read your message at ${format(new Date(lastMessage.readAt), 'h:mm a')}`);\n                }\n                const newMessage = new Audio('/notification.wav');\n                newMessage.play().catch(error => {\n                  console.log('Audio playback failed: ', error);\n                });\n                bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n              } catch (error) {\n                console.error(error);\n              }\n            };\n        \n            fetchMessages();\n            const interval = setInterval(fetchMessages, 1000);\n            return () => clearInterval(interval);\n          }, [user, otherUser]);\n        \n          const sendMessage = async () => {\n            if (input.trim() !== \"\") {\n              try {\n                await axios.post(`${API_URL}/messages`, { name: user, text: input });\n                setInput('');\n                setIsTyping(false);\n                await axios.post(`${API_URL}/typing`, { user, isTyping: false });\n              } catch (error) {\n                console.error(error);\n              }\n            }\n          };\n        \n          const handleInputChange = async (e) => {\n            setInput(e.target.value);\n            if (!isTyping) {\n              setIsTyping(true);\n              await axios.post(`${API_URL}/typing`, { user, isTyping: true });\n            }\n            if (e.target.value === '') {\n              setIsTyping(false);\n              await axios.post(`${API_URL}/typing`, { user, isTyping: false });\n            }\n          };\n        \n          const handleBlur = async () => {\n            const lastMessage = messages[messages.length - 1];\n            if (lastMessage && lastMessage.name !== user) {\n              try {\n                await axios.put(`${API_URL}/messages/${lastMessage.id}/read`);\n              } catch (error) {\n                console.error(error);\n              }\n            }\n          };\n        \n          useEffect(() => {\n            bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n          }, [messages]);\n        \n          return (\n            <Container maxWidth={isMobile ? false : \"sm\"} style={isMobile ? { padding: 0 } : {}}>\n              <Paper elevation={3} style={{ padding: '1rem', marginTop: isMobile ? 0 : '1rem', height: isMobile ? '100vh' : 'auto', display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                  Chat as {user}\n                </Typography>\n                <List className=\"chat-list\" style={{ flexGrow: 1, overflowY: 'scroll', marginBottom: '1rem' }}>\n                  {messages.map((message) => (\n                    <ListItem \n                      key={message.id} \n                      alignItems=\"flex-start\"\n                      className={message.name === user ? \"chat-bubble user\" : \"chat-bubble other\"}\n                    >\n                      <ListItemText\n                        primary={message.text}\n                        secondary={`${message.name}, ${new Date(message.timestamp).toLocaleString()}`}\n                      />\n                    </ListItem>\n                  ))}\n                  <div ref={bottomRef} />\n                </List>\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" gutterBottom>\n                  {typingStatus}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" gutterBottom>\n                  {readStatus}\n                </Typography>\n                <TextField\n                  label=\"Message\"\n                  value={input}\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  fullWidth\n                  style={{ marginBottom: '0.5rem' }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={sendMessage}\n                  fullWidth\n                >\n                  Send\n                </Button>\n              </Paper>\n            </Container>\n          );\n        };\n        \n        export default Chat;\n        "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}